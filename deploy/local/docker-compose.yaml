version: '3'

services:
  nginx:
    build: ../../nginx
    networks:
      project:
        aliases:
          - nginx
    ports:
      - 80:80
#      - ${PUB_HTTPS_PORT}:443
#    volumes:
#      - ./docker/nginx/ssl:/etc/nginx/ssl #for SSL
  laravel-backend:
    image: laravel-www
    container_name: laravel-backend
    build:
      context: ../../laravel-backend
      dockerfile: ./docker/Dockerfile
      args:
        build_env: devel
    networks:
      project:
        aliases:
          - laravel-backend
    environment:
      XDEBUG_PORT: 9000
      XDEBUG_HOST: 127.0.0.1
      XDEBUG_IDKEY: DEFKEY
      CONTAINER_ROLE: app
    volumes:
      - ../../laravel-backend:/var/www
  queue:
    image: laravel-www
    container_name: laravel-queue
    depends_on:
      - laravel-backend
    networks:
      project:
        aliases:
          - laravel-queue
    volumes:
      - ../../laravel-backend:/var/www
    environment:
      CONTAINER_ROLE: queue
# wait lts
#  nuxt-frontend:
#    build:
#      context: ../../nuxt-frontend
#      dockerfile: ./docker/Dockerfile
#    ports:
#      - 24678:24678 #For websocket
#    networks:
#      project:
#        aliases:
#          - nuxt-frontend
#          - frontend
#    volumes:
#      - ../../nuxt-frontend:/var/www
  # PostgreSQL database container
  postgres:
    image: 'postgres'
    volumes:
      # Database volume
      - database:/var/lib/postgresql/data
      # Temp volume to allow using dumps
      - ./docker/dev/postgres/dumps/:/tmp/
    ports:
      - 54321:5432
    networks:
      project:
        aliases:
          - postgres
    environment:
      - LC_ALL=C.UTF-8
      - POSTGRES_DB=app
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=app
  redis:
    image: 'redis'
    volumes:
      - ./storage/redis/data:/data
    ports:
      - 6379:6379
    networks:
      project:
        aliases:
          - redis
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    container_name: elasticsearch-projectv3
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
    #    volumes:
    #      - ./../elastic/data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      project:
        aliases:
          - elasticsearch
volumes:
  database:
    driver: local
  redis:
    driver: local

networks:
  project: